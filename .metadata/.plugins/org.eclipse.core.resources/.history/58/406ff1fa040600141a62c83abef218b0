package com.littleturn.todo;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import android.app.Activity;
import android.app.AlarmManager;
import android.app.DatePickerDialog;
import android.app.Dialog;
import android.app.PendingIntent;
import android.app.TimePickerDialog;
import android.content.ContentValues;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.TimePicker;
import android.widget.Toast;

public class Add extends Activity{
	int mYear;
    int mMonth;
    int mDay;
    int mHour;
    int mMinute;
    Calendar c;
	static final int DATE_DIALOG_ID = 1;
	static final int TIME_DIALOG_ID = 0;
	boolean dateFlag=false;
	boolean timeFlag=false;
	int notificationCount;
	String time,contentTitle,Priority,SelectedCategory;
	Context mContext;
	EditText e;    
	Button dt,tm,dialogButton;
	RadioGroup rg;
	RadioButton l,n,h,priority;
	Spinner categorySpinner;
	int selectedid; 
    List<RowItem> rowItems;
    RowItem itemData;
    CustomAdapter adapter;
    SQLiteDatabase db;
    Cursor cu;
    String[] Category={"DAILY","WEEKLY","MONTHLY","YEARLY","BIRTHDAYS","ANIVERSARIES"};
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.customdialog_layout);
		TextView t = (TextView)findViewById(R.id.textView1);
		t.setText("Task :");
		e =(EditText)findViewById(R.id.dialogTaskText); 
		dt=(Button)findViewById(R.id.datebutton);
		tm=(Button)findViewById(R.id.timebutton);
		rg=(RadioGroup)findViewById(R.id.radioGroup1);
		l=(RadioButton)findViewById(R.id.radio0);
		n=(RadioButton)findViewById(R.id.radio1);
		h=(RadioButton)findViewById(R.id.radio2);
		categorySpinner=(Spinner)findViewById(R.id.spinnercategory);
		dialogButton = (Button)findViewById(R.id.dialogButton);
		TextListener textListener=new TextListener();
		dt.setEnabled(false);
		tm.setEnabled(false);
		l.setEnabled(false);
		n.setEnabled(false);
		h.setEnabled(false);
		dialogButton.setEnabled(false);
		categorySpinner.setEnabled(false);
		e.addTextChangedListener(textListener);
		tm.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
					showDialog(TIME_DIALOG_ID);
			}
		});
		dt.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
					showDialog(DATE_DIALOG_ID);
			}
		});
		dialogButton.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
			if(dateFlag==true && timeFlag==true){
				notificationCount  = notificationCount+1;
			      dateFlag = false;
			      timeFlag = false;
			      time = mYear+"-"+mMonth+"-"+mDay+" "+mHour+"-"+mMinute;                                
			            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd hh-mm");  
			            Date date = null;
			            try {
			            			date = df.parse(time);
			            	} catch (ParseException e) {
			            		// TODO Auto-generated catch block
			            		e.printStackTrace();
			            	}                                        
			            long when = date.getTime();            
			            selectedid=rg.getCheckedRadioButtonId();
					    priority=(RadioButton)findViewById(selectedid);
			            contentTitle = e.getText().toString(); 
			            Priority = priority.getText().toString();
			            ArrayAdapter<String> adapter = new ArrayAdapter<String>(mContext,android.R.layout.simple_spinner_item, Category);
			            adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
			            categorySpinner.setAdapter(adapter);
			            categorySpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {

							@Override
							public void onItemSelected(AdapterView<?> adapterView,
									View arg1, int position, long arg3) {
								// TODO Auto-generated method stub
								SelectedCategory=adapterView.getItemAtPosition(position).toString();
							}

							@Override
							public void onNothingSelected(
									AdapterView<?> arg0) {
								// TODO Auto-generated method stub
								
							}
						});
			         AlarmManager mgr = (AlarmManager) mContext.getSystemService(Context.ALARM_SERVICE);
			         Intent notificationIntent = new Intent(mContext, ReminderAlarm.class);
			         notificationIntent.putExtra("Name",contentTitle ); 
			         notificationIntent.putExtra("PRIORITY", Priority);
			         notificationIntent.putExtra("Ringtonelow",getResources().getResourceName(R.raw.low));
			         notificationIntent.putExtra("Ringtonenormal",getResources().getResourceName(R.raw.normal));
			         notificationIntent.putExtra("Ringtonehigh",getResources().getResourceName(R.raw.high));
			         notificationIntent.putExtra("NotifyCount",notificationCount );
			         PendingIntent pi = PendingIntent.getBroadcast(mContext, notificationCount, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);
			         mgr.set(AlarmManager.RTC_WAKEUP,when, pi);
			         Toast.makeText(mContext, "A NEW TASK ADDED", Toast.LENGTH_LONG).show();
			   //==================================================     
			         ContentValues values = new ContentValues();
			         values.put("name", contentTitle);
			         values.put("hours", mHour);
			         values.put("minutes", mMinute);
			         values.put("priority", Priority);
			         values.put("category", SelectedCategory);
			         db.insert("tasksDetails", null, values);
			   //===================================================
				RowItem item = new RowItem(R.drawable.ic_launcher, e.getText().toString(),""+mHour+":"+mMinute,priority.getText().toString(),SelectedCategory);
	            rowItems.add(item);
	            adapter.notifyDataSetChanged();
			}
			else if (dateFlag==false) {
				Toast.makeText(getApplicationContext(), "Please set Date!!", Toast.LENGTH_SHORT).show();
			}
			else if (timeFlag==false) {
				Toast.makeText(getApplicationContext(), "Please set Time!!", Toast.LENGTH_SHORT).show();
			}
			}
		}); 
		
	}
	 public class TextListener implements TextWatcher{

  	   @Override
  	  public void afterTextChanged(Editable s) {
  	   // TODO Auto-generated method stub   
  	  }

  	   @Override
  	  public void beforeTextChanged(CharSequence s, int start, int count,
  	    int after) {
  	   // TODO Auto-generated method stub   
  	  }

  	   @Override
  	  public void onTextChanged(CharSequence s, int start, int before,
  	    int count) {
  	   // TODO Auto-generated method stub
  	   if(e.getText().length()==0){
  	    dt.setEnabled(false);
  	    tm.setEnabled(false);
  	    dialogButton.setEnabled(false);
  	    l.setEnabled(false);
			n.setEnabled(false);
			h.setEnabled(false);
			categorySpinner.setEnabled(false);
  	   }
  	   else if(e.getText().length()>0){
  	    dt.setEnabled(true);
  	    tm.setEnabled(true);
  	    dialogButton.setEnabled(true);
  	    l.setEnabled(true);
			n.setEnabled(true);
			h.setEnabled(true);
			categorySpinner.setEnabled(true);
  	   }
  	  }     
  }

  @Override
  protected Dialog onCreateDialog(int id) {
   // TODO Auto-generated method stub
   switch (id) {
    case TIME_DIALOG_ID:
       return new TimePickerDialog(this,
            mTimeSetListener, mHour, mMinute, false);
    case DATE_DIALOG_ID:
        return new DatePickerDialog(this,
                    mDateSetListener,
                    mYear, mMonth, mDay);
    }
   return super.onCreateDialog(id);
  }
  
  private DatePickerDialog.OnDateSetListener mDateSetListener =
      new DatePickerDialog.OnDateSetListener() {
          public void onDateSet(DatePicker view, int year, int monthOfYear,
                  int dayOfMonth) {
              mYear = year;
              mMonth = monthOfYear+1;
              mDay = dayOfMonth;                
              dateFlag = true;
          }
  };
      
  private TimePickerDialog.OnTimeSetListener mTimeSetListener =
      new TimePickerDialog.OnTimeSetListener() {
          public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
              mHour = hourOfDay;
              mMinute = minute;
              timeFlag = true;
          }
  };
}
