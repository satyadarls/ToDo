package com.littleturn.todo;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import android.app.AlarmManager;
import android.app.AlertDialog;
import android.app.PendingIntent;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Toast;
import android.widget.AdapterView.OnItemLongClickListener;

public class TasksCls extends Fragment {
	ListView l1;
	int mYear;
    int mMonth;
    int mDay;
    int mHour;
    int mMinute;
    Calendar c;
	static final int DATE_DIALOG_ID = 1;
	static final int TIME_DIALOG_ID = 0;
	boolean dateFlag=false;
	boolean timeFlag=false;
	int notificationCount;
	String time,contentTitle,Priority;
	Context mContext;
	EditText e;    
	Button dt,tm,dialogButton;
	RadioGroup rg;
	RadioButton l,n,h,priority;
	int selectedid;
    List<RowItem> rowItems;
    RowItem itemData;
    CustomAdapter adapter;
    SQLiteDatabase db;
    Cursor cu;
    View rootView;
	@Override
	   public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		   rootView =inflater.inflate(R.layout.tasks, container,false);
		   mContext=getActivity().getApplicationContext();
	        c = Calendar.getInstance();
	        mYear = c.get(Calendar.YEAR);
	        mMonth = c.get(Calendar.MONTH);
	        mDay = c.get(Calendar.DAY_OF_MONTH);
	        mHour = c.get(Calendar.HOUR_OF_DAY);
	        mMinute = c.get(Calendar.MINUTE);
	        
	        rowItems = new ArrayList<RowItem>();
	        l1=(ListView)rootView.findViewById(R.id.list);
	        adapter = new CustomAdapter(mContext, rowItems);
	        l1.setAdapter(adapter);
	        
	        
	        //========================================
	        db  = getActivity().openOrCreateDatabase("tasks", Context.MODE_WORLD_WRITEABLE,null);
	        db.execSQL("create table if not exists tasksdetails(name VARCHAR,hours VARCHAR,minutes VARCHAR,priority VARCHAR)");
	        cu= db.rawQuery("select * from tasksdetails", null); // null is for mode.
	        
	        while(cu.moveToNext()){
	        	RowItem item = new RowItem(R.drawable.ic_launcher,""+cu.getString(0),""+cu.getString(1)+":"+cu.getString(2),""+cu.getString(3));
	        	rowItems.add(item);
	        	adapter.notifyDataSetChanged();
	        }
	        //==========================================
	        l1.setOnItemLongClickListener(new OnItemLongClickListener() {

				@Override
				public boolean onItemLongClick(AdapterView<?> arg0, View arg1,
						int position, long arg3) {
					// TODO Auto-generated method stub
					removeItemFromList(position);
					return false;
				}

				private void removeItemFromList(int position) {
					// TODO Auto-generated method stub
					final int deletePosition = position;
					 AlertDialog.Builder alert = new AlertDialog.Builder(mContext);
					 	alert.setIcon(R.drawable.delete);
			            alert.setTitle("DELETE TASK");
			            alert.setMessage("Are you sure you want delete this Task?");
			            alert.setPositiveButton("YES", new DialogInterface.OnClickListener() {
			                public void onClick(DialogInterface dialog, int which) {
			                    // TOD O Auto-generated method stub
			                	
			                	Intent intentstop = new Intent(mContext, ReminderAlarm.class);
			                	PendingIntent senderstop = PendingIntent.getBroadcast(mContext,deletePosition+1, intentstop, 0);
			                	AlarmManager alarmManagerstop = (AlarmManager)getActivity().getSystemService(Context.ALARM_SERVICE);
			                	alarmManagerstop.cancel(senderstop);
			                	
			               //============deleting from database============ 
			                	itemData = rowItems.get(deletePosition);
			               
			                	db  = getActivity().openOrCreateDatabase("tasks", Context.MODE_WORLD_WRITEABLE,null);
			                	db.delete("tasksdetails", "name='"+itemData.getTitle()+"'",null);
			                	Toast.makeText(mContext,"Task "+itemData.getTitle()+" deleted", Toast.LENGTH_SHORT).show();
			             //=====================================================================   	
			                        // main code on after clicking yes
			        
			                        rowItems.remove(deletePosition);
			                        adapter.notifyDataSetChanged();
			                        adapter.notifyDataSetInvalidated();
			          
			                }
			            });
			            alert.setNegativeButton("CANCEL", new DialogInterface.OnClickListener() {
			                public void onClick(DialogInterface dialog, int which) {
			                    // TODO Auto-generated method stub
			                    dialog.dismiss();
			                }
			            });
			          
			            alert.show();
					
				}
			});
		  return rootView;
	   }
}
